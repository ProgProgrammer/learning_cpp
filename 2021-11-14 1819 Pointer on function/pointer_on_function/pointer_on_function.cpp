#include <iostream>

const double* f1(const double* arr, int n) // Переменная arr вообще не используется
{
    double num = n;
    const double* num2 = &num;

    return num2;    // тут ты возвращаешь указатель на переменную в стеке (на локальную переменную функции) - так делать нельзя никогда!
                    // после выхода из функции стек "очищается" (указатель стека перемещается, т.е. как бы ты снимаешь тарелки с верха стопки),
                    // но твой указатель вернулся во внешний мир и продолжает указывать на несуществующие тарелки (данные) (точнее на места где они были).
                    // Возможно, что эти данные там и остались (как бы старые данные уже прошлой фукнции), но на них полагаться нельзя.
}

int main(int argc, char* argv[])
{
    auto p1 = f1;
    const int num = 4;
    const double arr[num] = { 0.1, 1.2, 3, 4 };
    const double* n = (*p1)(arr, 4);
    // std::cout << n << " " << *n << std::endl; // 000000186B0FF668 -9.25596e+61 // в этой строке проиходит вызов сразу нескольких фукнци, которые перезатирают стек
                                                                                    // где раньше лежали твои тарелки, поэтому ты видишь мусор от новых тарелок.
    std::cout << *n; // 4   // а тут, видимо, не вызывается так много функций и стек не поднимается на столько сильно, чтобы затереть твои старые тарелки.

    return 0;
}
